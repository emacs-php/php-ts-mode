Code:
  (lambda ()
    (setq indent-tabs-mode nil)
    (setq php-ts-mode-indent-offset 4)
    (setq tab-width 4)
    (php-ts-mode)
    (indent-region (point-min) (point-max)))

Point-Char: |

Name: Basic

=-=
<?php

class Basic {
    public function basic(): void {
        return;
    }
}
=-=-=

Name: Empty Line

=-=
<?php

class EmptyLine {
    public function emptyLine(): void {
        |
    }
}
=-=-=
Name: Function

=-=
<?php

function basic(): void {
    return;
}
=-=-=

Name: Function with a PHPDoc

=-=
<?php

/**
 * Summary
 */
function with_phpdoc(): void {
    return;
}
=-=-=

Name: Namespace function

=-=
<?php

namespace Ns;

function ns_func(): void {
    return;
}
=-=-=

Name: Function with an attribute

=-=
<?php

namespace Ns;

#[Attribute]
function with_an_attr(): void {
    return;
}
=-=-=

Name: Function with two attributes

=-=
<?php

namespace Ns;

#[Attribute]
#[Attribute]
function with_two_attrs(): void {
    return;
}
=-=-=

Name: Opening bracket on new line

=-=
<?php

class Test
{
    public function test(): void
{
        return;
    }
}
=-=
<?php

class Test
{
    public function test(): void
    {
        return;
    }
}
=-=-=

Name: Switch default statement

=-=
<?php

function test()
{
    switch ($cond) {
        case 1:
            return 1;
        default:
        return 2;
    }
}
=-=
<?php

function test()
{
    switch ($cond) {
        case 1:
            return 1;
        default:
            return 2;
    }
}
=-=-=

Name: Match statement

=-=
<?php
match ($t) {
1 => 1
};
=-=
<?php
match ($t) {
    1 => 1
};
=-=-=

Name: Multi-line if

=-=
<?php
if ($testing &&
$testing2
&& true
) {
}
=-=
<?php
if ($testing &&
    $testing2
    && true
) {
}
=-=-=
